name: 🤖 Cursor Background Agent Setup
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  setup-development-environment:
    name: 🔧 開發環境設置
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ["8.1", "8.2"]
        node: ["18", "20"]

    steps:
      - name: 📥 獲取代碼
        uses: actions/checkout@v4

      - name: 🐘 設置 PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, ctype, json, curl, dom, fileinfo, ftp, gd, hash, iconv, libxml, openssl, pcre, pdo, session, tokenizer, zip, sockets
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M
          coverage: none

      - name: 🟢 設置 Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: 📦 安裝 Composer 依賴
        run: |
          composer validate --strict
          composer install --prefer-dist --no-progress --optimize-autoloader

      - name: 🔗 安裝 NPM 依賴
        run: |
          npm ci
          npx playwright install --with-deps

      - name: 🗄️ 創建目錄結構
        run: |
          mkdir -p public/css public/js data logs sessions storage test-logs playwright-report
          mkdir -p backend/api backend/classes backend/config backend/utils
          mkdir -p websocket config classes vendor
          chmod -R 755 public data logs sessions storage backend websocket config classes

      - name: 🔍 驗證關鍵文件
        run: |
          echo "🔍 檢查關鍵文件存在性..."
          ls -la test-servers/stable-websocket-server.php || echo "⚠️ WebSocket 服務器文件不存在"
          ls -la public/index.html || echo "⚠️ 主頁文件不存在"
          ls -la composer.json && echo "✅ Composer 配置存在"
          ls -la package.json && echo "✅ NPM 配置存在"

      - name: 🧪 運行基礎測試
        run: |
          echo "🧪 運行 PHP 語法檢查..."
          find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \; || echo "❌ PHP 語法錯誤"

          echo "🔌 檢查 WebSocket 服務器文件..."
          php -l test-servers/stable-websocket-server.php || echo "❌ WebSocket 服務器語法錯誤"

      - name: 📊 環境信息報告
        run: |
          echo "📊 環境配置報告："
          echo "PHP版本: $(php --version | head -n1)"
          echo "Composer版本: $(composer --version)"
          echo "Node.js版本: $(node --version)"
          echo "NPM版本: $(npm --version)"
          echo "工作目錄: $(pwd)"
          echo "磁盤空間: $(df -h . | tail -1)"

      - name: ✅ 設置完成確認
        run: |
          echo "✅ Background Agent 環境設置完成！"
          echo "🌐 HTTP 服務器準備就緒 (端口 8080)"
          echo "🔌 WebSocket 服務器準備就緒 (端口 8081)"
          echo "📂 所有必要目錄已創建"
          echo "🔐 權限設置完成"
          echo "🤖 可以使用 Cursor Background Agents"

  validate-background-agent-config:
    name: 🔍 Background Agent 配置驗證
    runs-on: ubuntu-latest
    needs: setup-development-environment

    steps:
      - name: 📥 獲取代碼
        uses: actions/checkout@v4

      - name: 🔍 驗證環境配置文件
        run: |
          echo "🔍 檢查 .cursor/environment.json..."
          if [ -f ".cursor/environment.json" ]; then
            echo "✅ 環境配置文件存在"
            cat .cursor/environment.json | jq . > /dev/null && echo "✅ JSON 格式正確" || echo "❌ JSON 格式錯誤"
          else
            echo "❌ 環境配置文件不存在"
            exit 1
          fi

      - name: 📋 配置內容檢查
        run: |
          echo "📋 檢查配置內容..."

          # 檢查必要字段
          jq -e '.name' .cursor/environment.json && echo "✅ 名稱字段存在"
          jq -e '.install' .cursor/environment.json && echo "✅ 安裝腳本存在"
          jq -e '.terminals' .cursor/environment.json && echo "✅ 終端配置存在"
          jq -e '.env' .cursor/environment.json && echo "✅ 環境變數存在"
          jq -e '.ports' .cursor/environment.json && echo "✅ 端口配置存在"

          # 檢查 Background Agent 特定設置
          jq -e '.agentCanUpdateSnapshot' .cursor/environment.json && echo "✅ Agent 快照更新權限已啟用"
          jq -e '.agentCanInstallPackages' .cursor/environment.json && echo "✅ Agent 包安裝權限已啟用"
          jq -e '.agentCanRunScripts' .cursor/environment.json && echo "✅ Agent 腳本執行權限已啟用"

      - name: ✅ 驗證完成
        run: |
          echo "✅ Background Agent 配置驗證完成！"
          echo "🤖 Cursor Background Agents 可以正常使用此環境"
