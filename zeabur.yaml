# Zeabur 部署配置 - 簡化版使用 Dockerfile
name: pythonlearn-collaboration

services:
  # 主要應用服務 - 包含 Web + WebSocket
  app:
    # 使用 Dockerfile 構建
    dockerfile: Dockerfile.simple
    
    # 端口配置
    ports:
      - 8080  # PHP Web 服務器
      - 8081  # WebSocket 服務器
    
    # 環境變數
    envs:
      ENVIRONMENT: production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-3.5-turbo
      MAX_CONCURRENT_USERS: 50
      MAX_ROOMS: 20
    
    # 健康檢查
    healthcheck:
      path: /health.php
      port: 8080
      interval: 30s
      timeout: 10s
    
    # 重啟策略
    restart: unless-stopped

  # Caddy 反向代理服務
  proxy:
    # 使用官方 Caddy 鏡像
    image: caddy:2-alpine
    
    # Caddy 配置
    command: |
      caddy run --config /etc/caddy/Caddyfile
    
    # 配置文件
    configs:
      - source: caddyfile
        target: /etc/caddy/Caddyfile
    
    ports:
      - 80
    
    depends_on:
      - app
    
    restart: unless-stopped

# 配置文件定義
configs:
  caddyfile:
    content: |
      :80 {
        # 處理 WebSocket 連接
        @websocket {
          header Connection *Upgrade*
          header Upgrade websocket
          path /ws
        }
        reverse_proxy @websocket app:8081
        
        # 處理普通 HTTP 請求
        reverse_proxy app:8080
        
        # 日誌
        log {
          output stdout
          format console
        }
      }

# 部署配置
deploy:
  auto: true
  
  # 環境變數
  envs:
    optional:
      - OPENAI_API_KEY

# 🔍 日誌配置
logging:
  driver: json-file
  options:
    max-size: "50m"
    max-file: "2"

# 🌐 網路配置
networks:
  default:
    driver: bridge

# 📊 監控配置
monitoring:
  enabled: true
  metrics:
    - name: http_requests_total
      type: counter
      help: "Total HTTP requests"
    
    - name: websocket_connections
      type: gauge
      help: "Active WebSocket connections"
    
    - name: caddy_requests_total
      type: counter
      help: "Total Caddy proxy requests"
    
    - name: ai_requests_total
      type: counter
      help: "Total AI assistant requests"
    
    - name: python_executions_total
      type: counter
      help: "Total Python code executions"

# 🔐 密鑰管理
secrets:
  openai-api-key:
    external: true
    name: OPENAI_API_KEY

# 卷配置
volumes:
  mysql_data:
    driver: local

# 健康檢查配置
healthcheck:
  web:
    path: /health.php
    interval: 30s
    timeout: 10s
    
  caddy:
    port: 80
    interval: 30s
    timeout: 10s

# 環境變數配置
env:
  # OpenAI API 密鑰（需要在 Zeabur 控制台設置）
  OPENAI_API_KEY:
    type: secret
    
  # 域名（Zeabur 自動設置）
  ZEABUR_DOMAIN:
    type: auto 